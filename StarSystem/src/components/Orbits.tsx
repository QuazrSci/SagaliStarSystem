/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/Anciana system_orbits.glb -t 
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    comet_orbit: THREE.Mesh
    planet_orbit_1: THREE.Mesh
    planet_orbit_2: THREE.Mesh
    star_orbit_1: THREE.Mesh
    star_orbit_2: THREE.Mesh
    star_orbit_3: THREE.Mesh
    star_orbit_4: THREE.Mesh
    star_orbit_5: THREE.Mesh
  }
  materials: {
    orbit_dashed: THREE.MeshStandardMaterial
    orbit: THREE.MeshStandardMaterial
  }
}

type ContextType = Record<string, React.ForwardRefExoticComponent<JSX.IntrinsicElements['mesh']>>

export function Orbits(props: JSX.IntrinsicElements['group']) {
  const { nodes, materials } = useGLTF('/models/Orbits.glb') as GLTFResult
  return (
    <group {...props} dispose={null}>
      <mesh geometry={nodes.comet_orbit.geometry} material={materials.orbit_dashed} position={[-8.28, 4.051, 0.141]} rotation={[0.18, 0.236, -0.598]} scale={[0.159, 0.2, 0.2]} />
      <mesh geometry={nodes.planet_orbit_1.geometry} material={materials.orbit} position={[2.307, 0.011, -4.895]} rotation={[0.001, -0.031, 0.722]} scale={1.537} />
      <mesh geometry={nodes.planet_orbit_2.geometry} material={materials.orbit} position={[-10.128, 2.972, -4.659]} rotation={[0.106, -0.175, 0.302]} scale={1.361} />
      <mesh geometry={nodes.star_orbit_1.geometry} material={materials.orbit} rotation={[0.12, 0.22, -0.175]} scale={3.619} />
      <mesh geometry={nodes.star_orbit_2.geometry} material={materials.orbit} scale={5.432} />
      <mesh geometry={nodes.star_orbit_3.geometry} material={materials.orbit} scale={8.632} />
      <mesh geometry={nodes.star_orbit_4.geometry} material={materials.orbit} rotation={[0.25, 0.2, -0.181]} scale={11.539} />
      <mesh geometry={nodes.star_orbit_5.geometry} material={materials.orbit} rotation={[0.001, -0.315, 0.197]} scale={17.333} />
    </group>
  )
}

useGLTF.preload('/models/Orbits.glb')
